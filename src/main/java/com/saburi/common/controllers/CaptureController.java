/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.common.controllers;

import com.saburi.common.utils.DaemonThread;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
//import org.opencv.videoio.VideoCapture;

public class CaptureController implements Initializable {
    
    @FXML
    private ImageView imvCapturePhoto;
    @FXML
    private Button btnCapturePhoto;
    @FXML
    private ImageView imvUsePhoto;
    @FXML
    private Button btnUsePhoto, btnClose;
    private boolean photoChosen = false;
    private DaemonThread threadDaemon;
    
    @Override
    public void initialize(URL url, ResourceBundle rb) {
//        try {
//            
////            openCamera();
//            btnCapturePhoto.disableProperty().bind(imvCapturePhoto.imageProperty().isNull());
//             btnUsePhoto.disableProperty().bind(imvUsePhoto.imageProperty().isNull());
//            btnCapturePhoto.setOnAction(e -> imvUsePhoto.setImage(imvCapturePhoto.getImage()));
//            btnUsePhoto.setOnAction(e -> {
//                this.photoChosen = true;
//                 threadDaemon.stop();
//                ((Node) e.getSource()).getScene().getWindow().hide();
//            });
//            
//            btnClose.setOnAction(e -> {
//                this.photoChosen = false;
//                 threadDaemon.stop();
//                ((Node) e.getSource()).getScene().getWindow().hide();
//            });
//            
//        } catch (Exception e) {
//            errorMessage(e);
//        } finally {
//        }
    }
    
   
    
    public void openCamera() {
//        nu.pattern.OpenCV.loadShared();
//        VideoCapture capture = new VideoCapture(0);
//       threadDaemon = new DaemonThread(capture,imvCapturePhoto);
//          Thread thread = new Thread(threadDaemon);
//        thread.setDaemon(true);
//        threadDaemon.setRunnable(true);
//        thread.start();
        

    }
    
    
    public Image getChoosenImage(){
         return imvUsePhoto.getImage();
    }
     
    
    public void clear() {
        imvCapturePhoto.setImage(null);
        imvUsePhoto.setImage(null);
        this.photoChosen = false;
        
    }

    public boolean isPhotoChosen() {
        return photoChosen;
    }

    
    
}
