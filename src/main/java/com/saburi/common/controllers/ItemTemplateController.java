/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.common.controllers;

import java.net.URL;
import java.util.ResourceBundle;
import javafx.fxml.FXML;
import static com.saburi.common.utils.FXUIUtils.*;
import com.saburi.common.utils.Utilities.FormMode;
import static com.saburi.common.utils.FXUIUtils.warningOk;
import com.saburi.common.dbaccess.ItemTemplateDA;
import javafx.scene.control.TextField;
import javafx.scene.control.ComboBox;
import javafx.scene.control.MenuItem;
import com.saburi.common.dbaccess.ItemCategoryDA;
import com.saburi.common.entities.ItemCategory;
import com.saburi.common.entities.LookupData;
import com.saburi.common.utils.CommonObjectNames;
import com.saburi.common.dbaccess.MeasureGroupDA;
import com.saburi.common.entities.MeasureGroup;
import com.saburi.common.utils.CommonNavigate;
import java.io.IOException;

public class ItemTemplateController extends EditController {

    private final ItemTemplateDA oItemTemplateDA = new ItemTemplateDA();
    @FXML
    private TextField txtTemplateName;
    @FXML
    private ComboBox cboItemCategory;
    @FXML
    private MenuItem cmiSelectItemCategory;
    @FXML
    private TextField txtItemCategoryGroup;
    @FXML
    private ComboBox cboItemGroup;
    @FXML
    private MenuItem cmiSelectItemGroup;
    @FXML
    private ComboBox cboVATItemGroup;
    @FXML
    private MenuItem cmiSelectVATItemGroup;
    @FXML
    private ComboBox cboInventoryGroup;
    @FXML
    private MenuItem cmiSelectInventoryGroup;
    @FXML
    private ComboBox cboMeasureGroup;
    @FXML
    private MenuItem cmiSelectMeasureGroup;
    private final ItemCategoryDA oItemCategoryDA = new ItemCategoryDA();
    private final MeasureGroupDA oMeasureGroupDA = new MeasureGroupDA();

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        try {
            loadLookupData(cboItemGroup, CommonObjectNames.ITEMGROUP);
            loadLookupData(cboVATItemGroup, CommonObjectNames.VATITEMGROUP);
            loadLookupData(cboInventoryGroup, CommonObjectNames.INVENTORYGROUP);
            loadDBEntities(oItemCategoryDA.getItemCategorys(), cboItemCategory);
            loadDBEntities(oMeasureGroupDA.getMeasureGroups(), cboMeasureGroup);

            this.primaryKeyControl = txtTemplateName;
            this.dbAccess = oItemTemplateDA;
            this.restrainColumnConstraint = false;
//            this.minSize = 360;
            selectItem(CommonNavigate.mainClass, cmiSelectItemCategory, oItemCategoryDA, "LookupData", "Item Category", 700, 400, cboItemCategory, true);
            selectLookupData(CommonNavigate.mainClass, cmiSelectItemGroup, CommonObjectNames.ITEMGROUP, "LookupData", "Item Group", 700, 400, cboItemGroup, false);
            selectLookupData(CommonNavigate.mainClass, cmiSelectVATItemGroup, CommonObjectNames.VATITEMGROUP, "LookupData", "VAT Item Group", 700, 400, cboVATItemGroup, false);
            selectLookupData(CommonNavigate.mainClass, cmiSelectInventoryGroup, CommonObjectNames.INVENTORYGROUP, "LookupData", "Inventory Group", 700, 400, cboInventoryGroup, false);
            selectItem(CommonNavigate.mainClass, cmiSelectMeasureGroup, oMeasureGroupDA, "Measure Group", "Measure Group", 700, 400, cboMeasureGroup, true);
            cboItemCategory.setOnAction(e -> txtItemCategoryGroup.setText(((ItemCategory) cboItemCategory.getValue()).getItemCategoryGroup().name()));
        } catch (IOException e) {
            errorMessage(e);
        } finally {
        }
    }

    @Override
    protected void save() {
        try {
            this.editSuccessful = false;
            String templateName = getText(txtTemplateName, "Template Name");
            ItemCategory itemCategory = (ItemCategory) getEntity(cboItemCategory);
            LookupData itemGroup = (LookupData) getEntity(cboItemGroup);
            LookupData vATItemGroup = (LookupData) getEntity(cboVATItemGroup);
            LookupData inventoryGroup = (LookupData) getEntity(cboInventoryGroup);
            MeasureGroup measureGroup = (MeasureGroup) getEntity(cboMeasureGroup);

            ItemTemplateDA itemTemplateDA = new ItemTemplateDA(templateName, itemCategory, itemGroup, vATItemGroup, inventoryGroup, measureGroup);
            String buttonText = btnSave.getText();
            if (buttonText.equalsIgnoreCase(FormMode.Save.name())) {
                itemTemplateDA.save();
                message("Saved Successfully");
                clear();
            } else if (buttonText.equalsIgnoreCase(FormMode.Update.name())) {
                itemTemplateDA.update();
                message("Updated Successfully");
            }
            this.dbAccess = itemTemplateDA;
            this.editSuccessful = true;
        } catch (Exception e) {
            errorMessage(e);
        } finally {
        }
    }

    @Override
    protected void delete() {
        try {
            String templateName = getText(txtTemplateName, "Template Name");
            ItemTemplateDA itemTemplateDA = oItemTemplateDA.get(templateName);
            if (!warningOk("Confirm Delete", "You are about to delete a record with ID: " + templateName + " Are you sure you want to continue?", "Remember this action cannot be un done")) {
                return;
            }
            if (itemTemplateDA.delete()) {
                message("Deleted Successfully");
                this.clear();
            }
        } catch (Exception e) {
            errorMessage(e);
        }
    }

    @Override
    public void loadData() {
        try {
            String templateName = getText(txtTemplateName, "Template Name");

            ItemTemplateDA itemTemplateDA = oItemTemplateDA.get(templateName);
            txtTemplateName.setText(itemTemplateDA.getTemplateName());
            cboItemCategory.setValue(itemTemplateDA.getItemCategory());
            txtItemCategoryGroup.setText(itemTemplateDA.getItemCategoryGroup().toString());
            cboItemGroup.setValue(itemTemplateDA.getItemGroup());
            cboVATItemGroup.setValue(itemTemplateDA.getVATItemGroup());
            cboInventoryGroup.setValue(itemTemplateDA.getInventoryGroup());
            cboMeasureGroup.setValue(itemTemplateDA.getMeasureGroup());

        } catch (Exception e) {
            errorMessage(e);
        }

    }

    private void clear() {
        txtTemplateName.clear();
        cboItemCategory.setValue(null);
        txtItemCategoryGroup.clear();
        cboItemGroup.setValue(null);
        cboVATItemGroup.setValue(null);
        cboInventoryGroup.setValue(null);
        cboMeasureGroup.setValue(null);

    }

}
