/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.common.entities;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;

@Entity

public class LookupObject extends DBEntity {

    @Id
    @NotNull(message = "The field: Lookup Object ID cannot be null")
    @Size(max = 100, message = "The field: Lookup Object ID size cannot be greater than 100")
    @Column(length = 100, updatable = false)
    private int lookupObjectID;
    @Size(max = 40, message = "The field: Lookup Object Name size cannot be greater than 40")
    @NotNull(message = "The field: Lookup Object Name cannot be null")
    @Column(length = 40)
    private String lookupObjectName;
    private boolean readOnly;
    private boolean hidden;

    public LookupObject() {
    }

    public LookupObject(int lookupObjectID, String lookupObjectName, boolean readOnly, boolean hidden) {
        this.lookupObjectID = lookupObjectID;
        this.lookupObjectName = lookupObjectName;
        this.readOnly = readOnly;
        this.hidden = hidden;

    }

    public int getLookupObjectID() {
        return lookupObjectID;
    }

    public void setLookupObjectID(int lookupObjectID) {
        this.lookupObjectID = lookupObjectID;
    }

    public String getLookupObjectName() {
        return lookupObjectName;
    }

    public void setLookupObjectName(String lookupObjectName) {
        this.lookupObjectName = lookupObjectName;
    }

    public boolean isReadOnly() {
        return readOnly;
    }

    public void setReadOnly(boolean readOnly) {
        this.readOnly = readOnly;
    }

    public boolean isHidden() {
        return hidden;
    }

    public void setHidden(boolean hidden) {
        this.hidden = hidden;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof LookupObject)) {
            return false;
        }

        LookupObject lookupObject = (LookupObject) o;

        return this.getId().equals(lookupObject.getId());
    }

    @Override
    public int hashCode() {
        return this.lookupObjectID;

    }

    @Override
    public Object getId() {
        return this.lookupObjectID;
    }

    @Override
    public String getDisplayKey() {
        return this.lookupObjectName;
    }

}
