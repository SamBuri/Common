/*
 Sam Buriima
generated by Saburi Tools
*/
package com.saburi.common.entities;

import javax.persistence.Entity;
import javax.persistence.Id;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;
import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.validation.constraints.Size;
import java.time.LocalDate;
import com.saburi.common.utils.CommonEnums.OpenStatus;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;


@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class RequisitionOne extends DBEntity{

@Column(updatable = false)private int idHelper;
@Id
@NotNull(message =  "The field: Requistion ID cannot be null")
@Size(max =  100, message =  "The field: Requistion ID size cannot be greater than 100")
@Column(length = 100, updatable = false)private String requisitionID;
private LocalDate requistionDate;
@Enumerated
private OpenStatus status;
@OneToOne
@JoinColumn(name = "itemGroupID",foreignKey = @ForeignKey(name = "fkItemGroupIDRequisitionOne"))private LookupData itemGroup;

public RequisitionOne(){
}
public  RequisitionOne(int idHelper,String requisitionID,LocalDate requistionDate,OpenStatus status,LookupData itemGroup){
 this.idHelper = idHelper;
this.requisitionID = requisitionID;
this.requistionDate = requistionDate;
this.status = status;
this.itemGroup = itemGroup;

}

public int getIdHelper(){
 return idHelper;
}
public void setIdHelper(int idHelper){
this.idHelper = idHelper;
}public String getRequisitionID(){
 return requisitionID;
}
public void setRequisitionID(String requisitionID){
this.requisitionID = requisitionID;
}public LocalDate getRequistionDate(){
 return requistionDate;
}
public void setRequistionDate(LocalDate requistionDate){
this.requistionDate = requistionDate;
}public OpenStatus getStatus(){
 return status;
}
public void setStatus(OpenStatus status){
this.status = status;
}public LookupData getItemGroup(){
 return itemGroup;
}
public void setItemGroup(LookupData itemGroup){
this.itemGroup = itemGroup;
}
 @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof RequisitionOne)) {
            return false;
        }

        RequisitionOne requisitionOne = (RequisitionOne) o;

        return this.getId().equals(requisitionOne.getId());
    }
    @Override
    public int hashCode() {
        return this.requisitionID.hashCode();

    } @Override
public Object getId(){
return this.requisitionID;
}
 @Override
public String getDisplayKey(){
return this.requisitionID;
}


}
