/*
 Sam Buriima
generated by Saburi Tools
 */
package com.saburi.common.entities;

import javax.persistence.Cacheable;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ForeignKey;
import javax.persistence.OneToOne;
import javax.persistence.Column;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

@Entity
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
@Table(uniqueConstraints = @UniqueConstraint(columnNames = {"countyID", "subCountyName"}, name = "uqCountyIDSubCountyNameSubCounty"))
@Cacheable
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class SubCounty extends DBEntity {

    @Column(name = "idHelper", updatable = false)
    private int idHelper;
    @OneToOne
    @JoinColumn(name = "countyID", foreignKey = @ForeignKey(name = "fkCountyIDSubCounty"), nullable = false)
    private County county;
    @Id
    @Column(name = "subCountyID", updatable = false, length = 20, nullable = false)
    private String subCountyID;
    @Column(name = "subCountyName", length = 100, nullable = false)
    private String subCountyName;

    public SubCounty() {
    }

    public SubCounty(int idHelper, County county, String subCountyID, String subCountyName) {
        this.idHelper = idHelper;
        this.county = county;
        this.subCountyID = subCountyID;
        this.subCountyName = subCountyName;

    }

    public int getIdHelper() {
        return idHelper;
    }

    public void setIdHelper(int idHelper) {
        this.idHelper = idHelper;
    }

    public County getCounty() {
        return county;
    }

    public void setCounty(County county) {
        this.county = county;
    }

    public String getSubCountyID() {
        return subCountyID;
    }

    public void setSubCountyID(String subCountyID) {
        this.subCountyID = subCountyID;
    }

    public String getSubCountyName() {
        return subCountyName;
    }

    public void setSubCountyName(String subCountyName) {
        this.subCountyName = subCountyName;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof SubCounty)) {
            return false;
        }

        SubCounty subCounty = (SubCounty) o;

        return this.getId().equals(subCounty.getId());
    }

    @Override
    public int hashCode() {
        return this.subCountyID.hashCode();

    }

    @Override
    public Object getId() {
        return subCountyID;
    }

    @Override
    public String getDisplayKey() {
        return this.subCountyName;
    }

}
